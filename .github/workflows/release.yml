on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: SDK Release

jobs:
  release:
    name: Compile and Release SDK
    runs-on: macos-latest
    steps:
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm/10.0
          key: ${{ runner.os }}-cached-llvm-10.0

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '10.0'
          directory: ${{ runner.temp }}/llvm/10.0
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        id: rust_toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: false

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ steps.rust_toolchain.outputs.rustc_hash }}-release

      - name: Install Cargo Tools (cargo-make)
        uses: davidB/rust-cargo-make@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r22b

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: Run Flutter pub get
        run: flutter pub get

      - name: Install Android Targets
        run: rustup target add aarch64-linux-android x86_64-linux-android

      - name: Install iOS Targets
        run: rustup target add aarch64-apple-ios x86_64-apple-ios

      - name: Run cargo make android-dev (Release)
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-dev --profile release

      - name: Run cargo make android-arm (Release)
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-arm --profile release

      - name: Run cargo make ios (Release)
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: ios --profile release

      - name: Collect Artifacts
        run: |
          mkdir -p build
          cp target/aarch64-linux-android/release/libsubsocial.so build/libsubsocial-aarch64-linux-android.so
          cp target/x86_64-linux-android/release/libsubsocial.so build/libsubsocial-x86_64-linux-android.so
          cp target/universal/release/libsubsocial.a build/libsubsocial-universal-apple-ios.a
          cp native/ffi/binding.h build/bindings.h

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          # create a prerelease only if the release,
          # tag or the branch name contains "signer"
          prerelease: ${{ contains(github.ref, "signer") }}
          files: |
            build/libsubsocial-aarch64-linux-android.so
            build/libsubsocial-x86_64-linux-android.so
            build/libsubsocial-universal-apple-ios.a
            build/bindings.h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
